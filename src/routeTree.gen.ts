/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthenticatedBriowebviewRouteImport } from './routes/_authenticated/briowebview'
import { Route as AuthenticatedRiskObjectRouteRouteImport } from './routes/_authenticated/_risk-object/route'
import { Route as AuthenticatedPartyRouteRouteImport } from './routes/_authenticated/_party/route'
import { Route as AuthenticatedRiskObjectVehicleVehicleIdRouteImport } from './routes/_authenticated/_risk-object/vehicle/$vehicleId'
import { Route as AuthenticatedPartyPolicyHolderPolicyHolderIdRouteImport } from './routes/_authenticated/_party/policy-holder/$policyHolderId'
import { Route as AuthenticatedRiskObjectVehicleVehicleIdPartiesRouteImport } from './routes/_authenticated/_risk-object/vehicle/$vehicleId/parties'
import { Route as AuthenticatedRiskObjectVehicleVehicleIdGeneralRouteImport } from './routes/_authenticated/_risk-object/vehicle/$vehicleId/general'
import { Route as AuthenticatedRiskObjectVehicleVehicleIdDrivingAidRouteImport } from './routes/_authenticated/_risk-object/vehicle/$vehicleId/driving-aid'
import { Route as AuthenticatedRiskObjectVehicleVehicleIdAccessoriesRouteImport } from './routes/_authenticated/_risk-object/vehicle/$vehicleId/accessories'
import { Route as AuthenticatedPartyPolicyHolderPolicyHolderIdRelationsRouteImport } from './routes/_authenticated/_party/policy-holder/$policyHolderId/relations'
import { Route as AuthenticatedPartyPolicyHolderPolicyHolderIdIoRouteImport } from './routes/_authenticated/_party/policy-holder/$policyHolderId/io'
import { Route as AuthenticatedPartyPolicyHolderPolicyHolderIdDataRouteImport } from './routes/_authenticated/_party/policy-holder/$policyHolderId/data'
import { Route as AuthenticatedPartyPolicyHolderPolicyHolderIdFileRouteRouteImport } from './routes/_authenticated/_party/policy-holder/$policyHolderId/file/route'
import { Route as AuthenticatedPartyPolicyHolderPolicyHolderIdFileRiskObjectsRouteImport } from './routes/_authenticated/_party/policy-holder/$policyHolderId/file/risk-objects'
import { Route as AuthenticatedPartyPolicyHolderPolicyHolderIdFileContractsRouteImport } from './routes/_authenticated/_party/policy-holder/$policyHolderId/file/contracts'
import { Route as AuthenticatedPartyPolicyHolderPolicyHolderIdFileClaimsRouteImport } from './routes/_authenticated/_party/policy-holder/$policyHolderId/file/claims'

const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedBriowebviewRoute =
  AuthenticatedBriowebviewRouteImport.update({
    id: '/briowebview',
    path: '/briowebview',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedRiskObjectRouteRoute =
  AuthenticatedRiskObjectRouteRouteImport.update({
    id: '/_risk-object',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedPartyRouteRoute = AuthenticatedPartyRouteRouteImport.update({
  id: '/_party',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedRiskObjectVehicleVehicleIdRoute =
  AuthenticatedRiskObjectVehicleVehicleIdRouteImport.update({
    id: '/vehicle/$vehicleId',
    path: '/vehicle/$vehicleId',
    getParentRoute: () => AuthenticatedRiskObjectRouteRoute,
  } as any)
const AuthenticatedPartyPolicyHolderPolicyHolderIdRoute =
  AuthenticatedPartyPolicyHolderPolicyHolderIdRouteImport.update({
    id: '/policy-holder/$policyHolderId',
    path: '/policy-holder/$policyHolderId',
    getParentRoute: () => AuthenticatedPartyRouteRoute,
  } as any)
const AuthenticatedRiskObjectVehicleVehicleIdPartiesRoute =
  AuthenticatedRiskObjectVehicleVehicleIdPartiesRouteImport.update({
    id: '/parties',
    path: '/parties',
    getParentRoute: () => AuthenticatedRiskObjectVehicleVehicleIdRoute,
  } as any)
const AuthenticatedRiskObjectVehicleVehicleIdGeneralRoute =
  AuthenticatedRiskObjectVehicleVehicleIdGeneralRouteImport.update({
    id: '/general',
    path: '/general',
    getParentRoute: () => AuthenticatedRiskObjectVehicleVehicleIdRoute,
  } as any)
const AuthenticatedRiskObjectVehicleVehicleIdDrivingAidRoute =
  AuthenticatedRiskObjectVehicleVehicleIdDrivingAidRouteImport.update({
    id: '/driving-aid',
    path: '/driving-aid',
    getParentRoute: () => AuthenticatedRiskObjectVehicleVehicleIdRoute,
  } as any)
const AuthenticatedRiskObjectVehicleVehicleIdAccessoriesRoute =
  AuthenticatedRiskObjectVehicleVehicleIdAccessoriesRouteImport.update({
    id: '/accessories',
    path: '/accessories',
    getParentRoute: () => AuthenticatedRiskObjectVehicleVehicleIdRoute,
  } as any)
const AuthenticatedPartyPolicyHolderPolicyHolderIdRelationsRoute =
  AuthenticatedPartyPolicyHolderPolicyHolderIdRelationsRouteImport.update({
    id: '/relations',
    path: '/relations',
    getParentRoute: () => AuthenticatedPartyPolicyHolderPolicyHolderIdRoute,
  } as any)
const AuthenticatedPartyPolicyHolderPolicyHolderIdIoRoute =
  AuthenticatedPartyPolicyHolderPolicyHolderIdIoRouteImport.update({
    id: '/io',
    path: '/io',
    getParentRoute: () => AuthenticatedPartyPolicyHolderPolicyHolderIdRoute,
  } as any)
const AuthenticatedPartyPolicyHolderPolicyHolderIdDataRoute =
  AuthenticatedPartyPolicyHolderPolicyHolderIdDataRouteImport.update({
    id: '/data',
    path: '/data',
    getParentRoute: () => AuthenticatedPartyPolicyHolderPolicyHolderIdRoute,
  } as any)
const AuthenticatedPartyPolicyHolderPolicyHolderIdFileRouteRoute =
  AuthenticatedPartyPolicyHolderPolicyHolderIdFileRouteRouteImport.update({
    id: '/file',
    path: '/file',
    getParentRoute: () => AuthenticatedPartyPolicyHolderPolicyHolderIdRoute,
  } as any)
const AuthenticatedPartyPolicyHolderPolicyHolderIdFileRiskObjectsRoute =
  AuthenticatedPartyPolicyHolderPolicyHolderIdFileRiskObjectsRouteImport.update(
    {
      id: '/risk-objects',
      path: '/risk-objects',
      getParentRoute: () =>
        AuthenticatedPartyPolicyHolderPolicyHolderIdFileRouteRoute,
    } as any,
  )
const AuthenticatedPartyPolicyHolderPolicyHolderIdFileContractsRoute =
  AuthenticatedPartyPolicyHolderPolicyHolderIdFileContractsRouteImport.update({
    id: '/contracts',
    path: '/contracts',
    getParentRoute: () =>
      AuthenticatedPartyPolicyHolderPolicyHolderIdFileRouteRoute,
  } as any)
const AuthenticatedPartyPolicyHolderPolicyHolderIdFileClaimsRoute =
  AuthenticatedPartyPolicyHolderPolicyHolderIdFileClaimsRouteImport.update({
    id: '/claims',
    path: '/claims',
    getParentRoute: () =>
      AuthenticatedPartyPolicyHolderPolicyHolderIdFileRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/briowebview': typeof AuthenticatedBriowebviewRoute
  '/policy-holder/$policyHolderId': typeof AuthenticatedPartyPolicyHolderPolicyHolderIdRouteWithChildren
  '/vehicle/$vehicleId': typeof AuthenticatedRiskObjectVehicleVehicleIdRouteWithChildren
  '/policy-holder/$policyHolderId/file': typeof AuthenticatedPartyPolicyHolderPolicyHolderIdFileRouteRouteWithChildren
  '/policy-holder/$policyHolderId/data': typeof AuthenticatedPartyPolicyHolderPolicyHolderIdDataRoute
  '/policy-holder/$policyHolderId/io': typeof AuthenticatedPartyPolicyHolderPolicyHolderIdIoRoute
  '/policy-holder/$policyHolderId/relations': typeof AuthenticatedPartyPolicyHolderPolicyHolderIdRelationsRoute
  '/vehicle/$vehicleId/accessories': typeof AuthenticatedRiskObjectVehicleVehicleIdAccessoriesRoute
  '/vehicle/$vehicleId/driving-aid': typeof AuthenticatedRiskObjectVehicleVehicleIdDrivingAidRoute
  '/vehicle/$vehicleId/general': typeof AuthenticatedRiskObjectVehicleVehicleIdGeneralRoute
  '/vehicle/$vehicleId/parties': typeof AuthenticatedRiskObjectVehicleVehicleIdPartiesRoute
  '/policy-holder/$policyHolderId/file/claims': typeof AuthenticatedPartyPolicyHolderPolicyHolderIdFileClaimsRoute
  '/policy-holder/$policyHolderId/file/contracts': typeof AuthenticatedPartyPolicyHolderPolicyHolderIdFileContractsRoute
  '/policy-holder/$policyHolderId/file/risk-objects': typeof AuthenticatedPartyPolicyHolderPolicyHolderIdFileRiskObjectsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/briowebview': typeof AuthenticatedBriowebviewRoute
  '/policy-holder/$policyHolderId': typeof AuthenticatedPartyPolicyHolderPolicyHolderIdRouteWithChildren
  '/vehicle/$vehicleId': typeof AuthenticatedRiskObjectVehicleVehicleIdRouteWithChildren
  '/policy-holder/$policyHolderId/file': typeof AuthenticatedPartyPolicyHolderPolicyHolderIdFileRouteRouteWithChildren
  '/policy-holder/$policyHolderId/data': typeof AuthenticatedPartyPolicyHolderPolicyHolderIdDataRoute
  '/policy-holder/$policyHolderId/io': typeof AuthenticatedPartyPolicyHolderPolicyHolderIdIoRoute
  '/policy-holder/$policyHolderId/relations': typeof AuthenticatedPartyPolicyHolderPolicyHolderIdRelationsRoute
  '/vehicle/$vehicleId/accessories': typeof AuthenticatedRiskObjectVehicleVehicleIdAccessoriesRoute
  '/vehicle/$vehicleId/driving-aid': typeof AuthenticatedRiskObjectVehicleVehicleIdDrivingAidRoute
  '/vehicle/$vehicleId/general': typeof AuthenticatedRiskObjectVehicleVehicleIdGeneralRoute
  '/vehicle/$vehicleId/parties': typeof AuthenticatedRiskObjectVehicleVehicleIdPartiesRoute
  '/policy-holder/$policyHolderId/file/claims': typeof AuthenticatedPartyPolicyHolderPolicyHolderIdFileClaimsRoute
  '/policy-holder/$policyHolderId/file/contracts': typeof AuthenticatedPartyPolicyHolderPolicyHolderIdFileContractsRoute
  '/policy-holder/$policyHolderId/file/risk-objects': typeof AuthenticatedPartyPolicyHolderPolicyHolderIdFileRiskObjectsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/_authenticated/_party': typeof AuthenticatedPartyRouteRouteWithChildren
  '/_authenticated/_risk-object': typeof AuthenticatedRiskObjectRouteRouteWithChildren
  '/_authenticated/briowebview': typeof AuthenticatedBriowebviewRoute
  '/_authenticated/_party/policy-holder/$policyHolderId': typeof AuthenticatedPartyPolicyHolderPolicyHolderIdRouteWithChildren
  '/_authenticated/_risk-object/vehicle/$vehicleId': typeof AuthenticatedRiskObjectVehicleVehicleIdRouteWithChildren
  '/_authenticated/_party/policy-holder/$policyHolderId/file': typeof AuthenticatedPartyPolicyHolderPolicyHolderIdFileRouteRouteWithChildren
  '/_authenticated/_party/policy-holder/$policyHolderId/data': typeof AuthenticatedPartyPolicyHolderPolicyHolderIdDataRoute
  '/_authenticated/_party/policy-holder/$policyHolderId/io': typeof AuthenticatedPartyPolicyHolderPolicyHolderIdIoRoute
  '/_authenticated/_party/policy-holder/$policyHolderId/relations': typeof AuthenticatedPartyPolicyHolderPolicyHolderIdRelationsRoute
  '/_authenticated/_risk-object/vehicle/$vehicleId/accessories': typeof AuthenticatedRiskObjectVehicleVehicleIdAccessoriesRoute
  '/_authenticated/_risk-object/vehicle/$vehicleId/driving-aid': typeof AuthenticatedRiskObjectVehicleVehicleIdDrivingAidRoute
  '/_authenticated/_risk-object/vehicle/$vehicleId/general': typeof AuthenticatedRiskObjectVehicleVehicleIdGeneralRoute
  '/_authenticated/_risk-object/vehicle/$vehicleId/parties': typeof AuthenticatedRiskObjectVehicleVehicleIdPartiesRoute
  '/_authenticated/_party/policy-holder/$policyHolderId/file/claims': typeof AuthenticatedPartyPolicyHolderPolicyHolderIdFileClaimsRoute
  '/_authenticated/_party/policy-holder/$policyHolderId/file/contracts': typeof AuthenticatedPartyPolicyHolderPolicyHolderIdFileContractsRoute
  '/_authenticated/_party/policy-holder/$policyHolderId/file/risk-objects': typeof AuthenticatedPartyPolicyHolderPolicyHolderIdFileRiskObjectsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/register'
    | '/briowebview'
    | '/policy-holder/$policyHolderId'
    | '/vehicle/$vehicleId'
    | '/policy-holder/$policyHolderId/file'
    | '/policy-holder/$policyHolderId/data'
    | '/policy-holder/$policyHolderId/io'
    | '/policy-holder/$policyHolderId/relations'
    | '/vehicle/$vehicleId/accessories'
    | '/vehicle/$vehicleId/driving-aid'
    | '/vehicle/$vehicleId/general'
    | '/vehicle/$vehicleId/parties'
    | '/policy-holder/$policyHolderId/file/claims'
    | '/policy-holder/$policyHolderId/file/contracts'
    | '/policy-holder/$policyHolderId/file/risk-objects'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/register'
    | '/briowebview'
    | '/policy-holder/$policyHolderId'
    | '/vehicle/$vehicleId'
    | '/policy-holder/$policyHolderId/file'
    | '/policy-holder/$policyHolderId/data'
    | '/policy-holder/$policyHolderId/io'
    | '/policy-holder/$policyHolderId/relations'
    | '/vehicle/$vehicleId/accessories'
    | '/vehicle/$vehicleId/driving-aid'
    | '/vehicle/$vehicleId/general'
    | '/vehicle/$vehicleId/parties'
    | '/policy-holder/$policyHolderId/file/claims'
    | '/policy-holder/$policyHolderId/file/contracts'
    | '/policy-holder/$policyHolderId/file/risk-objects'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/login'
    | '/register'
    | '/_authenticated/_party'
    | '/_authenticated/_risk-object'
    | '/_authenticated/briowebview'
    | '/_authenticated/_party/policy-holder/$policyHolderId'
    | '/_authenticated/_risk-object/vehicle/$vehicleId'
    | '/_authenticated/_party/policy-holder/$policyHolderId/file'
    | '/_authenticated/_party/policy-holder/$policyHolderId/data'
    | '/_authenticated/_party/policy-holder/$policyHolderId/io'
    | '/_authenticated/_party/policy-holder/$policyHolderId/relations'
    | '/_authenticated/_risk-object/vehicle/$vehicleId/accessories'
    | '/_authenticated/_risk-object/vehicle/$vehicleId/driving-aid'
    | '/_authenticated/_risk-object/vehicle/$vehicleId/general'
    | '/_authenticated/_risk-object/vehicle/$vehicleId/parties'
    | '/_authenticated/_party/policy-holder/$policyHolderId/file/claims'
    | '/_authenticated/_party/policy-holder/$policyHolderId/file/contracts'
    | '/_authenticated/_party/policy-holder/$policyHolderId/file/risk-objects'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/briowebview': {
      id: '/_authenticated/briowebview'
      path: '/briowebview'
      fullPath: '/briowebview'
      preLoaderRoute: typeof AuthenticatedBriowebviewRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/_risk-object': {
      id: '/_authenticated/_risk-object'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRiskObjectRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/_party': {
      id: '/_authenticated/_party'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedPartyRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/_risk-object/vehicle/$vehicleId': {
      id: '/_authenticated/_risk-object/vehicle/$vehicleId'
      path: '/vehicle/$vehicleId'
      fullPath: '/vehicle/$vehicleId'
      preLoaderRoute: typeof AuthenticatedRiskObjectVehicleVehicleIdRouteImport
      parentRoute: typeof AuthenticatedRiskObjectRouteRoute
    }
    '/_authenticated/_party/policy-holder/$policyHolderId': {
      id: '/_authenticated/_party/policy-holder/$policyHolderId'
      path: '/policy-holder/$policyHolderId'
      fullPath: '/policy-holder/$policyHolderId'
      preLoaderRoute: typeof AuthenticatedPartyPolicyHolderPolicyHolderIdRouteImport
      parentRoute: typeof AuthenticatedPartyRouteRoute
    }
    '/_authenticated/_risk-object/vehicle/$vehicleId/parties': {
      id: '/_authenticated/_risk-object/vehicle/$vehicleId/parties'
      path: '/parties'
      fullPath: '/vehicle/$vehicleId/parties'
      preLoaderRoute: typeof AuthenticatedRiskObjectVehicleVehicleIdPartiesRouteImport
      parentRoute: typeof AuthenticatedRiskObjectVehicleVehicleIdRoute
    }
    '/_authenticated/_risk-object/vehicle/$vehicleId/general': {
      id: '/_authenticated/_risk-object/vehicle/$vehicleId/general'
      path: '/general'
      fullPath: '/vehicle/$vehicleId/general'
      preLoaderRoute: typeof AuthenticatedRiskObjectVehicleVehicleIdGeneralRouteImport
      parentRoute: typeof AuthenticatedRiskObjectVehicleVehicleIdRoute
    }
    '/_authenticated/_risk-object/vehicle/$vehicleId/driving-aid': {
      id: '/_authenticated/_risk-object/vehicle/$vehicleId/driving-aid'
      path: '/driving-aid'
      fullPath: '/vehicle/$vehicleId/driving-aid'
      preLoaderRoute: typeof AuthenticatedRiskObjectVehicleVehicleIdDrivingAidRouteImport
      parentRoute: typeof AuthenticatedRiskObjectVehicleVehicleIdRoute
    }
    '/_authenticated/_risk-object/vehicle/$vehicleId/accessories': {
      id: '/_authenticated/_risk-object/vehicle/$vehicleId/accessories'
      path: '/accessories'
      fullPath: '/vehicle/$vehicleId/accessories'
      preLoaderRoute: typeof AuthenticatedRiskObjectVehicleVehicleIdAccessoriesRouteImport
      parentRoute: typeof AuthenticatedRiskObjectVehicleVehicleIdRoute
    }
    '/_authenticated/_party/policy-holder/$policyHolderId/relations': {
      id: '/_authenticated/_party/policy-holder/$policyHolderId/relations'
      path: '/relations'
      fullPath: '/policy-holder/$policyHolderId/relations'
      preLoaderRoute: typeof AuthenticatedPartyPolicyHolderPolicyHolderIdRelationsRouteImport
      parentRoute: typeof AuthenticatedPartyPolicyHolderPolicyHolderIdRoute
    }
    '/_authenticated/_party/policy-holder/$policyHolderId/io': {
      id: '/_authenticated/_party/policy-holder/$policyHolderId/io'
      path: '/io'
      fullPath: '/policy-holder/$policyHolderId/io'
      preLoaderRoute: typeof AuthenticatedPartyPolicyHolderPolicyHolderIdIoRouteImport
      parentRoute: typeof AuthenticatedPartyPolicyHolderPolicyHolderIdRoute
    }
    '/_authenticated/_party/policy-holder/$policyHolderId/data': {
      id: '/_authenticated/_party/policy-holder/$policyHolderId/data'
      path: '/data'
      fullPath: '/policy-holder/$policyHolderId/data'
      preLoaderRoute: typeof AuthenticatedPartyPolicyHolderPolicyHolderIdDataRouteImport
      parentRoute: typeof AuthenticatedPartyPolicyHolderPolicyHolderIdRoute
    }
    '/_authenticated/_party/policy-holder/$policyHolderId/file': {
      id: '/_authenticated/_party/policy-holder/$policyHolderId/file'
      path: '/file'
      fullPath: '/policy-holder/$policyHolderId/file'
      preLoaderRoute: typeof AuthenticatedPartyPolicyHolderPolicyHolderIdFileRouteRouteImport
      parentRoute: typeof AuthenticatedPartyPolicyHolderPolicyHolderIdRoute
    }
    '/_authenticated/_party/policy-holder/$policyHolderId/file/risk-objects': {
      id: '/_authenticated/_party/policy-holder/$policyHolderId/file/risk-objects'
      path: '/risk-objects'
      fullPath: '/policy-holder/$policyHolderId/file/risk-objects'
      preLoaderRoute: typeof AuthenticatedPartyPolicyHolderPolicyHolderIdFileRiskObjectsRouteImport
      parentRoute: typeof AuthenticatedPartyPolicyHolderPolicyHolderIdFileRouteRoute
    }
    '/_authenticated/_party/policy-holder/$policyHolderId/file/contracts': {
      id: '/_authenticated/_party/policy-holder/$policyHolderId/file/contracts'
      path: '/contracts'
      fullPath: '/policy-holder/$policyHolderId/file/contracts'
      preLoaderRoute: typeof AuthenticatedPartyPolicyHolderPolicyHolderIdFileContractsRouteImport
      parentRoute: typeof AuthenticatedPartyPolicyHolderPolicyHolderIdFileRouteRoute
    }
    '/_authenticated/_party/policy-holder/$policyHolderId/file/claims': {
      id: '/_authenticated/_party/policy-holder/$policyHolderId/file/claims'
      path: '/claims'
      fullPath: '/policy-holder/$policyHolderId/file/claims'
      preLoaderRoute: typeof AuthenticatedPartyPolicyHolderPolicyHolderIdFileClaimsRouteImport
      parentRoute: typeof AuthenticatedPartyPolicyHolderPolicyHolderIdFileRouteRoute
    }
  }
}

interface AuthenticatedPartyPolicyHolderPolicyHolderIdFileRouteRouteChildren {
  AuthenticatedPartyPolicyHolderPolicyHolderIdFileClaimsRoute: typeof AuthenticatedPartyPolicyHolderPolicyHolderIdFileClaimsRoute
  AuthenticatedPartyPolicyHolderPolicyHolderIdFileContractsRoute: typeof AuthenticatedPartyPolicyHolderPolicyHolderIdFileContractsRoute
  AuthenticatedPartyPolicyHolderPolicyHolderIdFileRiskObjectsRoute: typeof AuthenticatedPartyPolicyHolderPolicyHolderIdFileRiskObjectsRoute
}

const AuthenticatedPartyPolicyHolderPolicyHolderIdFileRouteRouteChildren: AuthenticatedPartyPolicyHolderPolicyHolderIdFileRouteRouteChildren =
  {
    AuthenticatedPartyPolicyHolderPolicyHolderIdFileClaimsRoute:
      AuthenticatedPartyPolicyHolderPolicyHolderIdFileClaimsRoute,
    AuthenticatedPartyPolicyHolderPolicyHolderIdFileContractsRoute:
      AuthenticatedPartyPolicyHolderPolicyHolderIdFileContractsRoute,
    AuthenticatedPartyPolicyHolderPolicyHolderIdFileRiskObjectsRoute:
      AuthenticatedPartyPolicyHolderPolicyHolderIdFileRiskObjectsRoute,
  }

const AuthenticatedPartyPolicyHolderPolicyHolderIdFileRouteRouteWithChildren =
  AuthenticatedPartyPolicyHolderPolicyHolderIdFileRouteRoute._addFileChildren(
    AuthenticatedPartyPolicyHolderPolicyHolderIdFileRouteRouteChildren,
  )

interface AuthenticatedPartyPolicyHolderPolicyHolderIdRouteChildren {
  AuthenticatedPartyPolicyHolderPolicyHolderIdFileRouteRoute: typeof AuthenticatedPartyPolicyHolderPolicyHolderIdFileRouteRouteWithChildren
  AuthenticatedPartyPolicyHolderPolicyHolderIdDataRoute: typeof AuthenticatedPartyPolicyHolderPolicyHolderIdDataRoute
  AuthenticatedPartyPolicyHolderPolicyHolderIdIoRoute: typeof AuthenticatedPartyPolicyHolderPolicyHolderIdIoRoute
  AuthenticatedPartyPolicyHolderPolicyHolderIdRelationsRoute: typeof AuthenticatedPartyPolicyHolderPolicyHolderIdRelationsRoute
}

const AuthenticatedPartyPolicyHolderPolicyHolderIdRouteChildren: AuthenticatedPartyPolicyHolderPolicyHolderIdRouteChildren =
  {
    AuthenticatedPartyPolicyHolderPolicyHolderIdFileRouteRoute:
      AuthenticatedPartyPolicyHolderPolicyHolderIdFileRouteRouteWithChildren,
    AuthenticatedPartyPolicyHolderPolicyHolderIdDataRoute:
      AuthenticatedPartyPolicyHolderPolicyHolderIdDataRoute,
    AuthenticatedPartyPolicyHolderPolicyHolderIdIoRoute:
      AuthenticatedPartyPolicyHolderPolicyHolderIdIoRoute,
    AuthenticatedPartyPolicyHolderPolicyHolderIdRelationsRoute:
      AuthenticatedPartyPolicyHolderPolicyHolderIdRelationsRoute,
  }

const AuthenticatedPartyPolicyHolderPolicyHolderIdRouteWithChildren =
  AuthenticatedPartyPolicyHolderPolicyHolderIdRoute._addFileChildren(
    AuthenticatedPartyPolicyHolderPolicyHolderIdRouteChildren,
  )

interface AuthenticatedPartyRouteRouteChildren {
  AuthenticatedPartyPolicyHolderPolicyHolderIdRoute: typeof AuthenticatedPartyPolicyHolderPolicyHolderIdRouteWithChildren
}

const AuthenticatedPartyRouteRouteChildren: AuthenticatedPartyRouteRouteChildren =
  {
    AuthenticatedPartyPolicyHolderPolicyHolderIdRoute:
      AuthenticatedPartyPolicyHolderPolicyHolderIdRouteWithChildren,
  }

const AuthenticatedPartyRouteRouteWithChildren =
  AuthenticatedPartyRouteRoute._addFileChildren(
    AuthenticatedPartyRouteRouteChildren,
  )

interface AuthenticatedRiskObjectVehicleVehicleIdRouteChildren {
  AuthenticatedRiskObjectVehicleVehicleIdAccessoriesRoute: typeof AuthenticatedRiskObjectVehicleVehicleIdAccessoriesRoute
  AuthenticatedRiskObjectVehicleVehicleIdDrivingAidRoute: typeof AuthenticatedRiskObjectVehicleVehicleIdDrivingAidRoute
  AuthenticatedRiskObjectVehicleVehicleIdGeneralRoute: typeof AuthenticatedRiskObjectVehicleVehicleIdGeneralRoute
  AuthenticatedRiskObjectVehicleVehicleIdPartiesRoute: typeof AuthenticatedRiskObjectVehicleVehicleIdPartiesRoute
}

const AuthenticatedRiskObjectVehicleVehicleIdRouteChildren: AuthenticatedRiskObjectVehicleVehicleIdRouteChildren =
  {
    AuthenticatedRiskObjectVehicleVehicleIdAccessoriesRoute:
      AuthenticatedRiskObjectVehicleVehicleIdAccessoriesRoute,
    AuthenticatedRiskObjectVehicleVehicleIdDrivingAidRoute:
      AuthenticatedRiskObjectVehicleVehicleIdDrivingAidRoute,
    AuthenticatedRiskObjectVehicleVehicleIdGeneralRoute:
      AuthenticatedRiskObjectVehicleVehicleIdGeneralRoute,
    AuthenticatedRiskObjectVehicleVehicleIdPartiesRoute:
      AuthenticatedRiskObjectVehicleVehicleIdPartiesRoute,
  }

const AuthenticatedRiskObjectVehicleVehicleIdRouteWithChildren =
  AuthenticatedRiskObjectVehicleVehicleIdRoute._addFileChildren(
    AuthenticatedRiskObjectVehicleVehicleIdRouteChildren,
  )

interface AuthenticatedRiskObjectRouteRouteChildren {
  AuthenticatedRiskObjectVehicleVehicleIdRoute: typeof AuthenticatedRiskObjectVehicleVehicleIdRouteWithChildren
}

const AuthenticatedRiskObjectRouteRouteChildren: AuthenticatedRiskObjectRouteRouteChildren =
  {
    AuthenticatedRiskObjectVehicleVehicleIdRoute:
      AuthenticatedRiskObjectVehicleVehicleIdRouteWithChildren,
  }

const AuthenticatedRiskObjectRouteRouteWithChildren =
  AuthenticatedRiskObjectRouteRoute._addFileChildren(
    AuthenticatedRiskObjectRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedPartyRouteRoute: typeof AuthenticatedPartyRouteRouteWithChildren
  AuthenticatedRiskObjectRouteRoute: typeof AuthenticatedRiskObjectRouteRouteWithChildren
  AuthenticatedBriowebviewRoute: typeof AuthenticatedBriowebviewRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedPartyRouteRoute: AuthenticatedPartyRouteRouteWithChildren,
  AuthenticatedRiskObjectRouteRoute:
    AuthenticatedRiskObjectRouteRouteWithChildren,
  AuthenticatedBriowebviewRoute: AuthenticatedBriowebviewRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
