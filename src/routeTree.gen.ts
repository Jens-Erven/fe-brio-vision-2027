/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthenticatedBriowebviewRouteImport } from './routes/_authenticated/briowebview'
import { Route as AuthenticatedRiskObjectRouteImport } from './routes/_authenticated/_risk-object'
import { Route as AuthenticatedRiskObjectVehicleRouteRouteImport } from './routes/_authenticated/_risk-object/vehicle/route'
import { Route as AuthenticatedRiskObjectVehicleRelatiesRouteImport } from './routes/_authenticated/_risk-object/vehicle/relaties'
import { Route as AuthenticatedRiskObjectVehicleKlantgegevensRouteImport } from './routes/_authenticated/_risk-object/vehicle/klantgegevens'
import { Route as AuthenticatedRiskObjectVehicleDossierRouteImport } from './routes/_authenticated/_risk-object/vehicle/dossier'
import { Route as AuthenticatedRiskObjectVehicleDataverwerkingRouteImport } from './routes/_authenticated/_risk-object/vehicle/dataverwerking'

const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedBriowebviewRoute =
  AuthenticatedBriowebviewRouteImport.update({
    id: '/briowebview',
    path: '/briowebview',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedRiskObjectRoute = AuthenticatedRiskObjectRouteImport.update({
  id: '/_risk-object',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedRiskObjectVehicleRouteRoute =
  AuthenticatedRiskObjectVehicleRouteRouteImport.update({
    id: '/vehicle',
    path: '/vehicle',
    getParentRoute: () => AuthenticatedRiskObjectRoute,
  } as any)
const AuthenticatedRiskObjectVehicleRelatiesRoute =
  AuthenticatedRiskObjectVehicleRelatiesRouteImport.update({
    id: '/relaties',
    path: '/relaties',
    getParentRoute: () => AuthenticatedRiskObjectVehicleRouteRoute,
  } as any)
const AuthenticatedRiskObjectVehicleKlantgegevensRoute =
  AuthenticatedRiskObjectVehicleKlantgegevensRouteImport.update({
    id: '/klantgegevens',
    path: '/klantgegevens',
    getParentRoute: () => AuthenticatedRiskObjectVehicleRouteRoute,
  } as any)
const AuthenticatedRiskObjectVehicleDossierRoute =
  AuthenticatedRiskObjectVehicleDossierRouteImport.update({
    id: '/dossier',
    path: '/dossier',
    getParentRoute: () => AuthenticatedRiskObjectVehicleRouteRoute,
  } as any)
const AuthenticatedRiskObjectVehicleDataverwerkingRoute =
  AuthenticatedRiskObjectVehicleDataverwerkingRouteImport.update({
    id: '/dataverwerking',
    path: '/dataverwerking',
    getParentRoute: () => AuthenticatedRiskObjectVehicleRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/briowebview': typeof AuthenticatedBriowebviewRoute
  '/vehicle': typeof AuthenticatedRiskObjectVehicleRouteRouteWithChildren
  '/vehicle/dataverwerking': typeof AuthenticatedRiskObjectVehicleDataverwerkingRoute
  '/vehicle/dossier': typeof AuthenticatedRiskObjectVehicleDossierRoute
  '/vehicle/klantgegevens': typeof AuthenticatedRiskObjectVehicleKlantgegevensRoute
  '/vehicle/relaties': typeof AuthenticatedRiskObjectVehicleRelatiesRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/briowebview': typeof AuthenticatedBriowebviewRoute
  '/vehicle': typeof AuthenticatedRiskObjectVehicleRouteRouteWithChildren
  '/vehicle/dataverwerking': typeof AuthenticatedRiskObjectVehicleDataverwerkingRoute
  '/vehicle/dossier': typeof AuthenticatedRiskObjectVehicleDossierRoute
  '/vehicle/klantgegevens': typeof AuthenticatedRiskObjectVehicleKlantgegevensRoute
  '/vehicle/relaties': typeof AuthenticatedRiskObjectVehicleRelatiesRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/_authenticated/_risk-object': typeof AuthenticatedRiskObjectRouteWithChildren
  '/_authenticated/briowebview': typeof AuthenticatedBriowebviewRoute
  '/_authenticated/_risk-object/vehicle': typeof AuthenticatedRiskObjectVehicleRouteRouteWithChildren
  '/_authenticated/_risk-object/vehicle/dataverwerking': typeof AuthenticatedRiskObjectVehicleDataverwerkingRoute
  '/_authenticated/_risk-object/vehicle/dossier': typeof AuthenticatedRiskObjectVehicleDossierRoute
  '/_authenticated/_risk-object/vehicle/klantgegevens': typeof AuthenticatedRiskObjectVehicleKlantgegevensRoute
  '/_authenticated/_risk-object/vehicle/relaties': typeof AuthenticatedRiskObjectVehicleRelatiesRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/register'
    | '/briowebview'
    | '/vehicle'
    | '/vehicle/dataverwerking'
    | '/vehicle/dossier'
    | '/vehicle/klantgegevens'
    | '/vehicle/relaties'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/register'
    | '/briowebview'
    | '/vehicle'
    | '/vehicle/dataverwerking'
    | '/vehicle/dossier'
    | '/vehicle/klantgegevens'
    | '/vehicle/relaties'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/login'
    | '/register'
    | '/_authenticated/_risk-object'
    | '/_authenticated/briowebview'
    | '/_authenticated/_risk-object/vehicle'
    | '/_authenticated/_risk-object/vehicle/dataverwerking'
    | '/_authenticated/_risk-object/vehicle/dossier'
    | '/_authenticated/_risk-object/vehicle/klantgegevens'
    | '/_authenticated/_risk-object/vehicle/relaties'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/briowebview': {
      id: '/_authenticated/briowebview'
      path: '/briowebview'
      fullPath: '/briowebview'
      preLoaderRoute: typeof AuthenticatedBriowebviewRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/_risk-object': {
      id: '/_authenticated/_risk-object'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRiskObjectRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/_risk-object/vehicle': {
      id: '/_authenticated/_risk-object/vehicle'
      path: '/vehicle'
      fullPath: '/vehicle'
      preLoaderRoute: typeof AuthenticatedRiskObjectVehicleRouteRouteImport
      parentRoute: typeof AuthenticatedRiskObjectRoute
    }
    '/_authenticated/_risk-object/vehicle/relaties': {
      id: '/_authenticated/_risk-object/vehicle/relaties'
      path: '/relaties'
      fullPath: '/vehicle/relaties'
      preLoaderRoute: typeof AuthenticatedRiskObjectVehicleRelatiesRouteImport
      parentRoute: typeof AuthenticatedRiskObjectVehicleRouteRoute
    }
    '/_authenticated/_risk-object/vehicle/klantgegevens': {
      id: '/_authenticated/_risk-object/vehicle/klantgegevens'
      path: '/klantgegevens'
      fullPath: '/vehicle/klantgegevens'
      preLoaderRoute: typeof AuthenticatedRiskObjectVehicleKlantgegevensRouteImport
      parentRoute: typeof AuthenticatedRiskObjectVehicleRouteRoute
    }
    '/_authenticated/_risk-object/vehicle/dossier': {
      id: '/_authenticated/_risk-object/vehicle/dossier'
      path: '/dossier'
      fullPath: '/vehicle/dossier'
      preLoaderRoute: typeof AuthenticatedRiskObjectVehicleDossierRouteImport
      parentRoute: typeof AuthenticatedRiskObjectVehicleRouteRoute
    }
    '/_authenticated/_risk-object/vehicle/dataverwerking': {
      id: '/_authenticated/_risk-object/vehicle/dataverwerking'
      path: '/dataverwerking'
      fullPath: '/vehicle/dataverwerking'
      preLoaderRoute: typeof AuthenticatedRiskObjectVehicleDataverwerkingRouteImport
      parentRoute: typeof AuthenticatedRiskObjectVehicleRouteRoute
    }
  }
}

interface AuthenticatedRiskObjectVehicleRouteRouteChildren {
  AuthenticatedRiskObjectVehicleDataverwerkingRoute: typeof AuthenticatedRiskObjectVehicleDataverwerkingRoute
  AuthenticatedRiskObjectVehicleDossierRoute: typeof AuthenticatedRiskObjectVehicleDossierRoute
  AuthenticatedRiskObjectVehicleKlantgegevensRoute: typeof AuthenticatedRiskObjectVehicleKlantgegevensRoute
  AuthenticatedRiskObjectVehicleRelatiesRoute: typeof AuthenticatedRiskObjectVehicleRelatiesRoute
}

const AuthenticatedRiskObjectVehicleRouteRouteChildren: AuthenticatedRiskObjectVehicleRouteRouteChildren =
  {
    AuthenticatedRiskObjectVehicleDataverwerkingRoute:
      AuthenticatedRiskObjectVehicleDataverwerkingRoute,
    AuthenticatedRiskObjectVehicleDossierRoute:
      AuthenticatedRiskObjectVehicleDossierRoute,
    AuthenticatedRiskObjectVehicleKlantgegevensRoute:
      AuthenticatedRiskObjectVehicleKlantgegevensRoute,
    AuthenticatedRiskObjectVehicleRelatiesRoute:
      AuthenticatedRiskObjectVehicleRelatiesRoute,
  }

const AuthenticatedRiskObjectVehicleRouteRouteWithChildren =
  AuthenticatedRiskObjectVehicleRouteRoute._addFileChildren(
    AuthenticatedRiskObjectVehicleRouteRouteChildren,
  )

interface AuthenticatedRiskObjectRouteChildren {
  AuthenticatedRiskObjectVehicleRouteRoute: typeof AuthenticatedRiskObjectVehicleRouteRouteWithChildren
}

const AuthenticatedRiskObjectRouteChildren: AuthenticatedRiskObjectRouteChildren =
  {
    AuthenticatedRiskObjectVehicleRouteRoute:
      AuthenticatedRiskObjectVehicleRouteRouteWithChildren,
  }

const AuthenticatedRiskObjectRouteWithChildren =
  AuthenticatedRiskObjectRoute._addFileChildren(
    AuthenticatedRiskObjectRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedRiskObjectRoute: typeof AuthenticatedRiskObjectRouteWithChildren
  AuthenticatedBriowebviewRoute: typeof AuthenticatedBriowebviewRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedRiskObjectRoute: AuthenticatedRiskObjectRouteWithChildren,
  AuthenticatedBriowebviewRoute: AuthenticatedBriowebviewRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
